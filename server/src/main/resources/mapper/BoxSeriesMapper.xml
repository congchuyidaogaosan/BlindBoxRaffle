<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mysterybox.mapper.BoxSeriesMapper">
    <select id="findAll" resultType="com.mysterybox.entity.BoxSeries">
        SELECT * FROM box_series
    </select>
    
    <select id="findById" resultType="com.mysterybox.entity.BoxSeries">
        SELECT * FROM box_series WHERE id = #{id}
    </select>
    
    <select id="findByStatus" resultType="com.mysterybox.entity.BoxSeries">
        SELECT * FROM box_series WHERE status = #{status}
    </select>
    
    <insert id="insert" parameterType="com.mysterybox.entity.BoxSeries" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO box_series (name, description, status)
        VALUES (#{name}, #{description}, #{status})
    </insert>
    
    <update id="update" parameterType="com.mysterybox.entity.BoxSeries">
        UPDATE box_series
        SET name = #{name},
            description = #{description},
            status = #{status},
            update_time = NOW()
        WHERE id = #{id}
    </update>
    
    <delete id="delete">
        DELETE FROM box_series WHERE id = #{id}
    </delete>
    
    <select id="findByNameAndStatus" resultType="com.mysterybox.entity.BoxSeries">
        SELECT * FROM box_series 
        WHERE 1=1
        <if test="name != null and name != ''">
            AND name LIKE CONCAT('%', #{name}, '%')
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
        ORDER BY create_time DESC
    </select>
    
    <select id="findHotSeries" resultType="com.mysterybox.entity.BoxSeries">
        SELECT bs.*, 
               COUNT(od.id) as sales_count,
               SUM(od.price * od.quantity) as total_sales
        FROM box_series bs
        LEFT JOIN box_style s ON bs.id = s.series_id
        LEFT JOIN order_detail od ON s.id = od.box_style_id
        LEFT JOIN orders o ON od.order_id = o.id AND o.status = 'COMPLETED'
        GROUP BY bs.id
        HAVING total_sales > 0
        ORDER BY total_sales DESC
        LIMIT #{limit}
    </select>
</mapper> 